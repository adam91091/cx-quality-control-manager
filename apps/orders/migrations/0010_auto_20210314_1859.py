# Generated by Django 2.2.10 on 2021-03-14 17:59

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('orders', '0009_auto_20210311_2148'),
    ]

    operations = [
        migrations.AlterField(
            model_name='measurement',
            name='external_diameter_target',
            field=models.FloatField(validators=[django.core.validators.RegexValidator(message='Pole float powinno zawierać liczbę całkowitą bądź zmiennoprzecinkową', regex='^([0-9]*|[0-9]*(\\.|,)\\d+)$')]),
        ),
        migrations.AlterField(
            model_name='measurement',
            name='external_diameter_tolerance_bottom',
            field=models.FloatField(validators=[django.core.validators.RegexValidator(message='Pole float powinno zawierać liczbę całkowitą bądź zmiennoprzecinkową', regex='^([0-9]*|[0-9]*(\\.|,)\\d+)$')]),
        ),
        migrations.AlterField(
            model_name='measurement',
            name='external_diameter_tolerance_top',
            field=models.FloatField(validators=[django.core.validators.RegexValidator(message='Pole float powinno zawierać liczbę całkowitą bądź zmiennoprzecinkową', regex='^([0-9]*|[0-9]*(\\.|,)\\d+)$')]),
        ),
        migrations.AlterField(
            model_name='measurement',
            name='internal_diameter_target',
            field=models.FloatField(validators=[django.core.validators.RegexValidator(message='Pole float powinno zawierać liczbę całkowitą bądź zmiennoprzecinkową', regex='^([0-9]*|[0-9]*(\\.|,)\\d+)$')]),
        ),
        migrations.AlterField(
            model_name='measurement',
            name='internal_diameter_tolerance_bottom',
            field=models.FloatField(validators=[django.core.validators.RegexValidator(message='Pole float powinno zawierać liczbę całkowitą bądź zmiennoprzecinkową', regex='^([0-9]*|[0-9]*(\\.|,)\\d+)$')]),
        ),
        migrations.AlterField(
            model_name='measurement',
            name='internal_diameter_tolerance_top',
            field=models.FloatField(validators=[django.core.validators.RegexValidator(message='Pole float powinno zawierać liczbę całkowitą bądź zmiennoprzecinkową', regex='^([0-9]*|[0-9]*(\\.|,)\\d+)$')]),
        ),
        migrations.AlterField(
            model_name='measurement',
            name='length_target',
            field=models.FloatField(validators=[django.core.validators.RegexValidator(message='Pole float powinno zawierać liczbę całkowitą bądź zmiennoprzecinkową', regex='^([0-9]*|[0-9]*(\\.|,)\\d+)$')]),
        ),
        migrations.AlterField(
            model_name='measurement',
            name='length_tolerance_bottom',
            field=models.FloatField(validators=[django.core.validators.RegexValidator(message='Pole float powinno zawierać liczbę całkowitą bądź zmiennoprzecinkową', regex='^([0-9]*|[0-9]*(\\.|,)\\d+)$')]),
        ),
        migrations.AlterField(
            model_name='measurement',
            name='length_tolerance_top',
            field=models.FloatField(validators=[django.core.validators.RegexValidator(message='Pole float powinno zawierać liczbę całkowitą bądź zmiennoprzecinkową', regex='^([0-9]*|[0-9]*(\\.|,)\\d+)$')]),
        ),
    ]
