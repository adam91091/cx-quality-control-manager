# Generated by Django 2.2.4 on 2020-04-18 11:42

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('products', '0002_auto_20200411_1640'),
    ]

    operations = [
        migrations.AlterField(
            model_name='product',
            name='product_sap_id',
            field=models.IntegerField(unique=True, validators=[django.core.validators.RegexValidator(code='invalid sap id', message='Numer SAP powinien składać się z dokładnie 6 cyfr', regex='^([0-9]{6})$')]),
        ),
        migrations.AlterField(
            model_name='specification',
            name='external_diameter_target',
            field=models.FloatField(validators=[django.core.validators.RegexValidator(message='Pole float powinno zawierać liczbę całkowitą bądź zmiennoprzecinkową', regex='^([0-9]*|[0-9]*\\.\\d+)$')]),
        ),
        migrations.AlterField(
            model_name='specification',
            name='external_diameter_tolerance_bottom',
            field=models.FloatField(validators=[django.core.validators.RegexValidator(message='Pole float powinno zawierać liczbę całkowitą bądź zmiennoprzecinkową', regex='^([0-9]*|[0-9]*\\.\\d+)$')]),
        ),
        migrations.AlterField(
            model_name='specification',
            name='external_diameter_tolerance_top',
            field=models.FloatField(validators=[django.core.validators.RegexValidator(message='Pole float powinno zawierać liczbę całkowitą bądź zmiennoprzecinkową', regex='^([0-9]*|[0-9]*\\.\\d+)$')]),
        ),
        migrations.AlterField(
            model_name='specification',
            name='flat_crush_resistance_target',
            field=models.IntegerField(validators=[django.core.validators.RegexValidator(message='Pole integer powinno zawierać liczbę całkowitą', regex='^[0-9]*$')]),
        ),
        migrations.AlterField(
            model_name='specification',
            name='flat_crush_resistance_tolerance_bottom',
            field=models.IntegerField(validators=[django.core.validators.RegexValidator(message='Pole integer powinno zawierać liczbę całkowitą', regex='^[0-9]*$')]),
        ),
        migrations.AlterField(
            model_name='specification',
            name='flat_crush_resistance_tolerance_top',
            field=models.IntegerField(validators=[django.core.validators.RegexValidator(message='Pole integer powinno zawierać liczbę całkowitą', regex='^[0-9]*$')]),
        ),
        migrations.AlterField(
            model_name='specification',
            name='internal_diameter_target',
            field=models.FloatField(validators=[django.core.validators.RegexValidator(message='Pole float powinno zawierać liczbę całkowitą bądź zmiennoprzecinkową', regex='^([0-9]*|[0-9]*\\.\\d+)$')]),
        ),
        migrations.AlterField(
            model_name='specification',
            name='internal_diameter_tolerance_bottom',
            field=models.FloatField(validators=[django.core.validators.RegexValidator(message='Pole float powinno zawierać liczbę całkowitą bądź zmiennoprzecinkową', regex='^([0-9]*|[0-9]*\\.\\d+)$')]),
        ),
        migrations.AlterField(
            model_name='specification',
            name='internal_diameter_tolerance_top',
            field=models.FloatField(validators=[django.core.validators.RegexValidator(message='Pole float powinno zawierać liczbę całkowitą bądź zmiennoprzecinkową', regex='^([0-9]*|[0-9]*\\.\\d+)$')]),
        ),
        migrations.AlterField(
            model_name='specification',
            name='length_target',
            field=models.FloatField(validators=[django.core.validators.RegexValidator(message='Pole float powinno zawierać liczbę całkowitą bądź zmiennoprzecinkową', regex='^([0-9]*|[0-9]*\\.\\d+)$')]),
        ),
        migrations.AlterField(
            model_name='specification',
            name='length_tolerance_bottom',
            field=models.FloatField(validators=[django.core.validators.RegexValidator(message='Pole float powinno zawierać liczbę całkowitą bądź zmiennoprzecinkową', regex='^([0-9]*|[0-9]*\\.\\d+)$')]),
        ),
        migrations.AlterField(
            model_name='specification',
            name='length_tolerance_top',
            field=models.FloatField(validators=[django.core.validators.RegexValidator(message='Pole float powinno zawierać liczbę całkowitą bądź zmiennoprzecinkową', regex='^([0-9]*|[0-9]*\\.\\d+)$')]),
        ),
        migrations.AlterField(
            model_name='specification',
            name='maximum_height_of_pallet',
            field=models.FloatField(validators=[django.core.validators.RegexValidator(message='Pole float powinno zawierać liczbę całkowitą bądź zmiennoprzecinkową', regex='^([0-9]*|[0-9]*\\.\\d+)$')]),
        ),
        migrations.AlterField(
            model_name='specification',
            name='moisture_content_target',
            field=models.IntegerField(validators=[django.core.validators.RegexValidator(message='Pole integer powinno zawierać liczbę całkowitą', regex='^[0-9]*$')]),
        ),
        migrations.AlterField(
            model_name='specification',
            name='moisture_content_tolerance_bottom',
            field=models.IntegerField(validators=[django.core.validators.RegexValidator(message='Pole integer powinno zawierać liczbę całkowitą', regex='^[0-9]*$')]),
        ),
        migrations.AlterField(
            model_name='specification',
            name='moisture_content_tolerance_top',
            field=models.IntegerField(validators=[django.core.validators.RegexValidator(message='Pole integer powinno zawierać liczbę całkowitą', regex='^[0-9]*$')]),
        ),
        migrations.AlterField(
            model_name='specification',
            name='quantity_on_the_pallet',
            field=models.IntegerField(validators=[django.core.validators.RegexValidator(message='Pole integer powinno zawierać liczbę całkowitą', regex='^[0-9]*$')]),
        ),
        migrations.AlterField(
            model_name='specification',
            name='wall_thickness_target',
            field=models.FloatField(validators=[django.core.validators.RegexValidator(message='Pole float powinno zawierać liczbę całkowitą bądź zmiennoprzecinkową', regex='^([0-9]*|[0-9]*\\.\\d+)$')]),
        ),
        migrations.AlterField(
            model_name='specification',
            name='wall_thickness_tolerance_bottom',
            field=models.FloatField(validators=[django.core.validators.RegexValidator(message='Pole float powinno zawierać liczbę całkowitą bądź zmiennoprzecinkową', regex='^([0-9]*|[0-9]*\\.\\d+)$')]),
        ),
        migrations.AlterField(
            model_name='specification',
            name='wall_thickness_tolerance_top',
            field=models.FloatField(validators=[django.core.validators.RegexValidator(message='Pole float powinno zawierać liczbę całkowitą bądź zmiennoprzecinkową', regex='^([0-9]*|[0-9]*\\.\\d+)$')]),
        ),
    ]
